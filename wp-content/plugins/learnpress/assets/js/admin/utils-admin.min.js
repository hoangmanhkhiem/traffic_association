import*as Utils from"../utils.js";import TomSelect from"tom-select";import Api from"../api.js";const AdminUtilsFunctions={buildTomSelect(t,e,o,s,n){if(!t)return;if((e={...{options:[],plugins:{remove_button:{title:"Remove this item"}},load(t,e){o(t,s,AdminUtilsFunctions.callBackTomSelectSearchAPI(e,n))}},...e}).options.length>20){const o=s?.current_ids?s?.current_ids:"",n=20,i=[];for(let t=0;t<e.options.length;t+=n)i.push(e.options.slice(t,t+n));e.options=i[0];const c=new TomSelect(t,e);for(let t=0;t<i.length;t++)setTimeout((()=>{i[t].forEach((t=>{c.addOption(t)})),t===i.length-1&&o&&c.setValue(o.split(","))}),200*t);return c}return new TomSelect(t,e)},callBackTomSelectSearchAPI:(t,e)=>({success:o=>{const s=e.success(o);t(s)}}),fetchCourses(t="",e={},o){const s=Api.admin.apiSearchCourses;e.c_search=t;const n={headers:{"Content-Type":"application/json","X-WP-Nonce":lpDataAdmin.nonce},method:"POST",body:JSON.stringify(e)};Utils.lpFetchAPI(s,n,o)},fetchUsers(t="",e={},o){const s=Api.admin.apiSearchUsers;e.search=t;const n={headers:{"Content-Type":"application/json","X-WP-Nonce":lpDataAdmin.nonce},method:"POST",body:JSON.stringify(e)};Utils.lpFetchAPI(s,n,o)}};export{Utils,AdminUtilsFunctions,Api};